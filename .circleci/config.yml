version: 2

jobs:
  build:
    docker:
      - image: circleci/node:7.10
      
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Installing Dependencies
          command: npm install

      - run:
          name: Building
          command: npm run build

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  deploy:  
    docker:
      - image: circleci/node:7.10

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Installing Dependencies
          command: npm install

      - run:
          name: Building
          command: npm run build

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: creating credentials filder
          command: mkdir ~/.aws
      - run:
          name: creating credentials file
          command: echo '[default]' > ~/.aws/credentials && echo 'aws_access_key_id=$aws_access_key_id' >> ~/.aws/credentials && echo 'aws_secret_access_key=$aws_secret_access_key' >> ~/.aws/credentials

      - run:
          name: cat credentials file
          command: cat ~/.aws/credentials

      - run:
          name: creating config file
          command: echo '[default]' > ~/.aws/config && echo 'region=us-east-1' > ~/.aws/config && echo 'output=json' >> ~/.aws/config

      - run:
          name: Installing pip
          command: sudo apt-get install python-pip python-dev build-essential 
      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Show files
          command: ls -al

      - run:
          name: Deploy to S3
          command: aws s3 sync build s3://tinkernorth.com/ --delete

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - deploy:
          filters:
            branches:
              only: master
